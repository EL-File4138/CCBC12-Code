# -*- coding: utf-8 -*-

"""
QR_Code.py
Author: Rorical
Notator: EL_File4138

A Solution for CCBC12 Timeline D 1814.
通过Turtle移动绘制二维码图形。
"""

# 下文定义：1： 左下；2：右下；3：左上；4：右上；

import sys
import turtle

sys.setrecursionlimit(1000000) # 防止递归层次限制导致中断；

turtle.speed(100)
turtle.color('black')

dots = "000110010010010010000011010000111000111111111000111000010110000010010010010011000010000010101111001010011000000000110111110001001010010011000010101000010000010010000110010010010010000011010000111000111111111000111000010110000010010010010011000000001000000000110000010100101000101110010011011000111011000111010010111011110001100010101100001011001101110011010001001010001110000100101011111101000001110000111010101001001010001001101011100011001111000001100001011111001000011110001100010000000110010010010010000011010000111000111111111000111000010110000010010010010011000011000000011111010001100010010110010101100101001011000011100000000101101010000111000010000111001001100011100000000001101101001111111111010011000001100011000011000"
index = 0
directions = [0, 3, 0, 1, 2, 1, 0, 3, 0]

# 定义每步移动；
def draw(base):
    global index
    for i in directions:
        turtle.setheading([base-45, base-135, base-225, base-315][i])
        turtle.forward(5)
        if dots[index] == "0":
            turtle.dot()
        index += 1
        turtle.forward(5)

# 递归推进每步绘制；
def draw_r(base, level):
    if level == 0:
        draw(base)
    else:
        for i in directions:
            draw_r([base-45, base-135, base-225, base-315][i], level - 1)

draw_r(0, 2)

turtle.done()